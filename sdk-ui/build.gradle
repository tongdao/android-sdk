apply plugin: 'com.android.library'
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: 'connectedAndroidTest') {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    jacocoClasspath = configurations['androidJacocoAnt']

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files(["${buildDir}/jacoco/testDebugUnitTest.exec",
                           "${buildDir}/outputs/code-coverage/connected/coverage.ec"
    ])
}

jacoco {

}

android {
    compileSdkVersion 23
    buildToolsVersion '24.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 20300
        versionName "2.3.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
        }
    }
    sourceSets {
        androidTest {
            setRoot('src/androidTest')
        }
    }
    lintOptions {
        disable 'ValidFragment'
    }
}

dependencies {
    //    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(path:':sdk', configuration: 'publishDebug')
    compile 'com.android.support:appcompat-v7:23.3.0'
    //    compile 'com.tongdao.sdk:tongrd:3.0.0'
    androidTestCompile 'com.android.support:support-annotations:24.2.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    // Optional -- Hamcrest library
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
}
